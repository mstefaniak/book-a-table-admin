{"version":3,"sources":["types.ts","context/firebase.ts","hooks/useBookings.ts","components/BookingsList/index.tsx","hooks/useUpdate.ts","components/Login/index.tsx","App.tsx","serviceWorker.js","lib/firebase.ts","index.js"],"names":["STATUS","FirebaseContext","createContext","firebase","DATA_TYPE","STATUS_MAP","0","1","2","3","4","5","chipColors","CANCELED","NEW","CONFIRMED","PREPARED","REALIZED","NOT_REALIZED","useStyles","makeStyles","theme","table","minWidth","th","fontWeight","typography","fontWeightBold","color","palette","common","white","backgroundColor","black","BookingsList","type","useContext","useState","loading","setLoading","data","setData","handleSnapshot","snapshot","empty","console","warn","newData","docs","map","contentObj","id","init","useCallback","a","collectionRef","firestore","collection","query","todayStartTime","getTime","startOfToday","todayEndTime","endOfToday","CURRENT","where","orderBy","NEXT","onSnapshot","err","log","get","useEffect","bookings","useBookings","update","docId","doc","useUpdate","classes","disabled","useRef","changeStatus","bookingId","status","current","formatTime","timestamp","date","Date","format","length","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableBody","booking","key","scope","name","people","area","Chip","label","comment","Tooltip","title","IconButton","edge","onClick","NoteAdd","HISTORY","Close","Done","error","padding","spacing","main","textAlign","content","marginBottom","card","maxWidth","margin","actions","justifyContent","Login","setError","email","setEmail","password","setPassword","handleKeyPress","event","onLogin","auth","signInWithEmailAndPassword","catch","Card","CardContent","TextField","autoFocus","value","onChange","target","fullWidth","onKeyPress","CardActions","Button","variant","root","position","flexGrow","grey","top","bottom","right","left","TabPanel","props","children","index","other","role","hidden","aria-labelledby","Box","p","App","setValue","isLogged","setIsLogged","onAuthStateChanged","user","AppBar","Tabs","newValue","signOut","Tab","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","projectId","process","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","Firebase","initializeApp","ReactDOM","render","StrictMode","Provider","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ab538382.chunk.js","sourcesContent":["export enum STATUS {\n  NEW = 0,\n  CONFIRMED = 1,\n  PREPARED = 2,\n  REALIZED = 3,\n  NOT_REALIZED = 4,\n  CANCELED = 5,\n}\n\nexport const STATUS_MAP = {\n  0: 'New',\n  1: 'Confirmed',\n  2: 'Prepared',\n  3: 'Realized',\n  4: 'Not realized',\n  5: 'Canceled',\n};\n\ninterface Booking {\n  id: string;\n  name: string;\n  email: string;\n  status: STATUS;\n  people: number;\n  area: string;\n  comment: string;\n  date: number;\n}\n\nexport type Bookings = Array<Booking>;\n\nexport enum DATA_TYPE {\n  CURRENT = 'current',\n  NEXT = 'next',\n  HISTORY = 'history',\n}\n","import { createContext } from \"react\";\nimport Firebase from \"firebase/app\";\n\ntype FirebaseContextType = {\n  firebase: Firebase.app.App | null;\n};\n\nexport const FirebaseContext = createContext<FirebaseContextType>({\n  firebase: null,\n});\n","import { useEffect, useCallback, useContext, useState } from \"react\";\nimport { FirebaseContext } from \"../context/firebase\";\nimport { startOfToday, endOfToday, getTime } from 'date-fns';\nimport { Bookings, DATA_TYPE } from '../types';\n\ntype Snapshot = firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>;\n\nexport const useBookings = (type: DATA_TYPE) => {\n  const { firebase } = useContext(FirebaseContext);\n  const [ loading, setLoading ] = useState(true);\n  const [ data, setData ] = useState<Bookings>([]);\n\n  const handleSnapshot = (snapshot: Snapshot) => {\n    setLoading(false);\n\n    if (snapshot.empty) {\n      console.warn('No matching documents');\n      return;\n    }\n\n    const newData = snapshot.docs.map((contentObj) => ({\n      ...contentObj.data(),\n      id: contentObj.id,\n    }));\n\n    setData(newData as Bookings);\n  }\n\n  const init = useCallback(async () => {\n    if (!firebase) {\n      return;\n    }\n    const collectionRef = firebase\n      .firestore()\n      .collection('bookings');\n\n    let query = null;\n    const todayStartTime = getTime(startOfToday());\n    const todayEndTime = getTime(endOfToday());\n    if (type === DATA_TYPE.CURRENT) {\n      query = collectionRef.where('date', '>', todayStartTime).where('date', '<', todayEndTime).orderBy('date', 'asc');\n    } else if (type === DATA_TYPE.NEXT) {\n      query = collectionRef.where('date', '>=', todayEndTime).orderBy('date', 'asc');\n    } else {\n      query = collectionRef.where('date', '<=', todayStartTime).orderBy('date', 'desc');\n    }\n\n    query.onSnapshot(snapshot => {\n      handleSnapshot(snapshot);\n    }, err => {\n      console.log(`Encountered error: ${err}`);\n    });\n\n    const snapshot = await query.get();\n\n    handleSnapshot(snapshot);\n  }, [firebase, type]);\n\n  useEffect(() => {\n    init();\n  }, [init]);\n\n  return { bookings: data, loading };\n};\n","import React, { useCallback, useRef } from 'react';\nimport { Chip, IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Tooltip } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  NoteAdd as NoteAddIcon,\n  Done as DoneIcon,\n  Close as CloseIcon,\n} from '@material-ui/icons';\nimport { format } from 'date-fns';\nimport { useBookings, useUpdate } from '../../hooks';\nimport { STATUS, STATUS_MAP, DATA_TYPE } from '../../types';\n\nconst chipColors: { [key:number]: 'default' | 'primary' | 'secondary' } = {\n  [STATUS.CANCELED]: 'default',\n  [STATUS.NEW]: 'default',\n  [STATUS.CONFIRMED]: 'default',\n  [STATUS.PREPARED]: 'secondary',\n  [STATUS.REALIZED]: 'primary',\n  [STATUS.NOT_REALIZED]: 'default',\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  th: {\n    fontWeight: theme.typography.fontWeightBold,\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\ninterface BookingsProps {\n  type: DATA_TYPE;\n}\n\nexport const BookingsList = ({ type }: BookingsProps) => {\n  const { bookings, loading } = useBookings(type);\n  const { update } = useUpdate();\n  const classes = useStyles();\n  const disabled = useRef<string>('');\n\n  const changeStatus = async (bookingId: string, status: STATUS) => {\n    disabled.current = bookingId;\n    await update(bookingId, { status });\n    disabled.current = '';\n  }\n\n  const formatTime = useCallback((timestamp: number): string => {\n    const date = new Date(timestamp);\n\n    if (type === DATA_TYPE.CURRENT) {\n      return format(date, 'HH:mm');\n    } else {\n      return format(date, 'yyyy-MM-dd HH:mm');\n    }\n  }, [type]);\n\n  return (\n    <>\n      { bookings.length ? (\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"bookings list\">\n            <TableHead>\n              <TableRow>\n                <TableCell className={classes.th}>Who</TableCell>\n                <TableCell className={classes.th} align=\"center\">When</TableCell>\n                <TableCell className={classes.th} align=\"center\">Persons</TableCell>\n                <TableCell className={classes.th} align=\"center\">Where</TableCell>\n                <TableCell className={classes.th} align=\"center\">Status</TableCell>\n                <TableCell className={classes.th} align=\"center\">Comment</TableCell>\n                <TableCell className={classes.th}></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {bookings.map((booking) => (\n                <TableRow key={booking.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {booking.name}\n                  </TableCell>\n                  <TableCell align=\"center\">{formatTime(booking.date)}</TableCell>\n                  <TableCell align=\"center\">{booking.people}</TableCell>\n                  <TableCell align=\"center\">{booking.area}</TableCell>\n                  <TableCell align=\"center\">\n                    <Chip\n                      color={chipColors[booking.status]}\n                      label={STATUS_MAP[booking.status]}\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">{booking.comment}</TableCell>\n                  <TableCell align=\"right\">\n                    {type === DATA_TYPE.CURRENT && booking.status < STATUS.PREPARED &&\n                      <Tooltip title=\"Mark prepared\">\n                        <IconButton\n                          edge=\"end\"\n                          aria-label=\"prepared\"\n                          disabled={disabled.current === booking.id}\n                          onClick={() => changeStatus(booking.id, STATUS.PREPARED)}\n                        >\n                          <NoteAddIcon />\n                        </IconButton>\n                      </Tooltip>\n                    }\n                    {(type === DATA_TYPE.CURRENT || type === DATA_TYPE.HISTORY) && booking.status === STATUS.PREPARED &&\n                      <>\n                        <Tooltip title=\"Mark not realized\">\n                          <IconButton\n                            edge=\"end\"\n                            aria-label=\"not realized\"\n                            disabled={disabled.current === booking.id}\n                            onClick={() => changeStatus(booking.id, STATUS.NOT_REALIZED)}\n                          >\n                            <CloseIcon />\n                          </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Mark realized\">\n                          <IconButton\n                            edge=\"end\"\n                            aria-label=\"realized\"\n                            disabled={disabled.current === booking.id}\n                            onClick={() => changeStatus(booking.id, STATUS.REALIZED)}\n                          >\n                            <DoneIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </>\n                    }\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      ) : (\n        <div>{loading ? 'Loading...' : 'No bookings found'}</div>\n      )}\n    </>\n  );\n};\n","import { useCallback, useContext } from \"react\";\nimport { FirebaseContext } from \"../context/firebase\";\n\nconst useUpdate = () => {\n  const { firebase } = useContext(FirebaseContext);\n\n  const update = useCallback(async (docId: string, data: { [key:string]: string | number }) => {\n    if (!firebase) {\n      return;\n    }\n    const collectionRef = firebase\n      .firestore()\n      .collection('bookings');\n\n    return collectionRef.doc(docId).update(data);\n  }, [firebase]);\n\n  return { update };\n};\n\nexport { useUpdate };\n","import React, { useContext, useState } from 'react';\nimport { Button, Card, CardContent, CardActions, TextField } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { FirebaseContext } from \"../../context/firebase\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  error: {\n    padding: theme.spacing(1),\n    color: theme.palette.error.main,\n    textAlign: 'center',\n  },\n  content: {\n    '& > *': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n  card: {\n    maxWidth: 400,\n    margin: '40px auto',\n  },\n  actions: {\n    justifyContent: 'center',\n  },\n}));\n\nexport const Login = () => {\n  const classes = useStyles();\n  const [ error, setError ] = useState(false);\n  const [ email, setEmail ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const { firebase } = useContext(FirebaseContext);\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      onLogin();\n    }\n  }\n\n  const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setError(false);\n    setEmail(event?.target?.value);\n  }\n\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setError(false);\n    setPassword(event?.target?.value);\n  }\n\n  const onLogin = () => {\n    if (!firebase) {\n      return;\n    }\n\n    firebase.auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => {\n        setError(true);\n      });\n  }\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        {error && <p className={classes.error}>Incorrect email and/or password</p>}\n        <TextField label=\"E-mail\" autoFocus value={email} onChange={onEmailChange} fullWidth onKeyPress={handleKeyPress} />\n        <TextField label=\"Password\" type=\"password\" value={password} onChange={onPasswordChange} fullWidth onKeyPress={handleKeyPress} />\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onLogin}>\n          Log in\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport { BookingsList } from './components/BookingsList';\nimport { Login } from './components/Login';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Box, Tab, Tabs } from '@material-ui/core';\nimport { DATA_TYPE } from './types';\nimport { FirebaseContext } from \"./context/firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey[100],\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n  },\n}));\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>{children}</Box>\n      )}\n    </div>\n  );\n};\n\nconst App = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [isLogged, setIsLogged] = useState(false);\n  const { firebase } = useContext(FirebaseContext);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n\n    if (firebase && newValue === 3) {\n      firebase.auth().signOut();\n    }\n  };\n\n  useEffect(() => {\n    if (firebase) {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          setValue(0);\n          setIsLogged(true);\n        } else {\n          setIsLogged(false);\n        }\n\n        setLoading(false);\n      });\n    }\n  }, [firebase]);\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isLogged) {\n    return <div className={classes.root}><Login /></div>;\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"nav tabs example\"\n        >\n          <Tab label=\"Current\" />\n          <Tab label=\"Upcoming\" />\n          <Tab label=\"History\" />\n          <Tab label=\"Sign out\" />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <BookingsList type={DATA_TYPE.CURRENT} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <BookingsList type={DATA_TYPE.NEXT} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <BookingsList type={DATA_TYPE.HISTORY} />\n      </TabPanel>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst projectId = isDev\n  ? \"book-a-table-96a18\"\n  : process.env.REACT_APP_FIREBASE_PROJECT_ID;\nconst apiKey = isDev\n  ? \"AIzaSyBCooZY6_EXqK5bDrW-toY0IGJ_xM7B8bE\"\n  : process.env.REACT_APP_FIREBASE_API_KEY;\n\nconst config = {\n  apiKey,\n  authDomain: `${projectId}.firebaseapp.com`,\n  databaseURL: `https://${projectId}.firebaseio.com`,\n  projectId,\n  storageBucket: `${projectId}.appspot.com`,\n  messagingSenderId: \"173934858452\",\n  appId: \"1:173934858452:web:50fdcc7645b3d229572b41\",\n};\n\nconst firebase = Firebase.initializeApp(config);\n\nexport { firebase };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { firebase } from \"./lib/firebase\";\nimport { FirebaseContext } from \"./context/firebase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={{ firebase }}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}